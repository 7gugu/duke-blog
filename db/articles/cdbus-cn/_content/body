<p><small>最後編輯：Fri Aug 18 00:21:54 HKT 2017</small></p>

<h2>歷史</h2>
<p>2009 年大二下學期，我和小夥伴們一起參與一個校企聯合項目，開發一款煤礦用皮帶機綜合保護器，
我主要負責電路軟硬件設計，因爲礦井中皮帶很長，保護器節點間相距約六百米，
各節點除了處理數據收發還要負責中繼，爲了更優的可靠性和實時性，中繼部分採用 FPGA 硬件實現，
因此中繼帶來的延時遠小於一個位長。
因爲沒有額外的主機，按照傳統，只能指定其中一個節點爲主機，
該節點負責持續發出查詢命令同步所有節點之數據，但萬一該主節點中途出故障下線，整個總線將會停止運行。
所以爲了進一步提升系統魯棒性及降低軟件複雜性，於是我設計了一款帶仲裁的 485 協議，做到節點間可以自由收發數據，
只有第一字節用做仲裁的字段使用低速傳輸，剩餘數據使用傳統 485 高速傳輸，在引入仲裁的同時保留了高速，當然也是由硬件實現。<p>

<p>由於開芯片需要大量資金，所以此協議一直沒有封裝成爲獨立的芯片，直到 2017 年初，條件成熟，產品才得以問世。<p>

<p><img class="img-responsive img-rounded" src="pic/cdbus1_hk.png"></p>


<h2>軟件實現數據鏈路層的缺點</h2>
<p>無論是串口還是 485 通訊，傳輸的數據正常都是要打包發送，常見的有類似 “ff aa” 兩個字節做爲數據幀的開頭，加上用戶自定義的數據格式可以判斷幀的結尾。<p>
<p>
<b>數據幀由 “ff aa” 開頭的缺點：</b>這些標誌常與其後數據重複，如果幀數據也含有一個 “ff aa”,
那麼當數據出錯可能會導致解析錯位，接收方誤以爲幀數據中的 “ff aa” 是幀頭標誌，而且出錯之後又會影響下一個數據包導致錯誤繼續。
</p>
<p>
<b>數據幀以空閒狀態做區分的缺點：</b>通常不可以使用 FIFO 和 DMA 接收數據，因爲那樣做會導致很多幀在內存中連接在一起，無法通過時間信息來區分。
如果不使用 FIFO 和 DMA, 不僅會增加 CPU 開銷，而且會對實時性有更高要求，爲不同中斷制定優先級順序時會十分困難：
如果接收的優先級更高，那麼每當總線有數據的時候，其它任務就會被打斷；
相反如果接收的優先級較低，那麼又可能會經常丟失數據。
</p>
<p>
數據幀由硬件來負責接收可避免這些問題。
</p>


<p>在普通的 485 應用場景中，CPU 直接控制 485 接口芯片接收數據，即使該數據幀並非發給自己，CPU 也要被總線數據頻繁中斷，影響效率。
同時收到數據幀後還要校驗以確保正確性，是一件非常佔用 CPU 資源的工作。<p>

<p>同時，由於傳統 485 只能單台主機不停查詢各從機以同步數據，總線的數據一定少不了，且利用率很低，實時性和魯棒性也差。
譬如有一個從機是一隻開關，主機爲了知道開關當前是否按下，要不停發送查詢數據包，然後開關回覆一個包含當前狀態的數據包給主機；
如果可以做到各節點均可主動發出數據包，那麼當開關狀態改變時，只需要發送一個數據包給主機便可，即快省又便捷。<p>

<h2>CAN 總線的侷限</h2>
<p>爲了降低 CPU 佔用和自由收發數據幀，所以一部分人選擇了 CAN 總線，CAN 控制器由硬件處理數據幀收發、校驗，同時提供自由收發數據幀的能力（仲裁），
但是 CAN 的數據幀最多只能傳輸 8 個字節數據，而且高速 CAN 最高速率只有 1 Mbps, 比 485 的標準 10 Mbps 低太多（485 速率還可以更高），而且 CAN 的版權費用導致成本很高。<p>

<p>最新的 CAN FD (CAN with Flexible Data-Rate) 可以支持超過 1 Mbps 的速率，但由於硬件依舊不是推輓輸出，所以通常也只有 2 Mbps、3 Mbps, 而且也找不到獨立的控制器芯片，
由於要兼容 CAN2.0, 加上 CAN 本身硬件較爲複雜，Microchip 2015 年說計畫推出 CAN FD 控制器，結果到現在也沒有出來。(http://www.microchip.com/forums/m970901.aspx)<p>

<p>CAN 協議使用消息類型取代站地址，同一類型消息只能由單個節點發出，否則仲裁機制將會失效。
譬如：如果有 3 只限位開關可使電機停止，必須定義 3 個功能重複的消息：爲開關 1 定義消息 “STOP1”,
爲開關 2 定義消息 “STOP2”, 以此類推，最終當電機收到以上任意消息便停轉。</p>
<p>
總線上所有設備共享同一個消息分配空間，如果需要改變某個設備的消息定義，必須充分考慮是否會影響其它所有設備。<p>

<p>在節點本來就不多的系統中（不超過 255），僅使用單播和廣播就完全夠用：譬如我要同時控制四個車窗升降，
分別發送四個數據包給四個玻璃窗也不會很低效，而且當我想單獨控制某一個玻璃窗時也不需要改變數據包定義；
又如，當剎車等緊急情況發生時，使用廣播包可以最迅速通知到每一個節點，即便車窗不響應該命令，被緊急事務打斷一下也是完全可以接受的。<p>


<p><img class="img-responsive img-rounded" src="pic/cdbus2_hk.png"></p>

<h2>CDBUS 介紹</h2>

<p>2017 年初，我接手一個工業機械臂的項目，爲了分別調試電機電流環、速度環及位置環參數，需要實時抓出電機運行中的數據，總線上還有很多傳感器，即使是正常使用數據量也會很大，
同時還要兼顧成本和電路面積，市面很多總線協議均不符合需求，爲此，我把 09 年的協議命名爲 CDBUS 協議，並推出獨立的控制器模組/芯片。<p>

<p>CDBUS 是一個相當開放的協議，硬件實現也相對簡單，除了芯片生產商需要支付少量版權費，
其餘任何人都可以免費使用此協議及其變種，只需要在產品說明中保留原始的版權信息。<p>

<p>CDBUS 協議只定義數據幀格式，不規定所裝載數據格式；只支持单播和廣播，不支持多播；只提供硬件避讓、避讓後自動重傳，而應答及出錯處理則由上層軟件負責。</p>

<p><img class="img-responsive img-rounded" src="pic/cdctl_b1_r.png"></p>

<h3>特性</h3>
<p>CDCTL-B1 型號模組支持：<br/>
• 支持 CDBUS 多主對等通訊協議，使用發送方地址按位仲裁 <br>
• 每個數據幀可裝載 253 字節數據 <br>
• 8 個接收緩衝頁，2 個發送緩衝頁，每個頁 256 字節 <br>
• 16 位硬件 CRC 校驗 <br>
• 波特率範圍 458 bps 至 10 Mbps（如果需要可以支持更高）<br>
• 仲裁字段和後續數據可設定不同波特率 <br>
• 可兼容傳統 RS485 總線設備 <br>
• 支持 SPI 和 I2C 接口 <br>
• 配置和使用簡單 <br>
</p>

<h3>CDBUS 協議</h3>
<p><img class="img-responsive img-rounded" src="pic/cdbus_protocol_hk.png"></p>

<p>如果把兩個波特率設置同等大小，便可以在保留仲裁機制的同時與傳統 485 硬件進行通訊，傳統硬件優先級設置高於 CDBUS 節點，
由 CDBUS 節點主動避讓傳統節點。當然還可以關閉仲裁功能，完全使用傳統通訊模式。</p>
<p>
CDBUS 和 CDCTL-XX 控制器還適用於 RS485 之外的硬件媒介，譬如單線 UART 總線。
</p>


<h3>電路參考</h3>
<p><img class="img-responsive img-rounded" src="pic/cdctl_b1_sch.png"></p>


<h3>完整文檔</h3>
<p>
<a href="doc/cdbus_intro_170814.pdf">cdbus_intro_170814.pdf</a> <br>
<a href="doc/cdbus_intro_hk_170814.pdf">cdbus_intro_hk_170814.pdf</a> <br>
<a href="doc/cdbus_intro_cn_170814.pdf">cdbus_intro_cn_170814.pdf</a> <br>
<a href="doc/cdctl_b1_170814.pdf">cdctl_b1_170814.pdf</a> <br>
<a href="doc/cdctl_b1_hk_170814.pdf">cdctl_b1_hk_170814.pdf</a> <br>
<a href="doc/cdctl_b1_cn_170814.pdf">cdctl_b1_cn_170814.pdf</a> <br>
</p>


<h3>產品實物圖（上一版）</h3>
<p><img class="img-responsive img-rounded" src="pic/cdctl_a1_photo.jpg"></p>

<h2>聯絡</h2>
<p>請發郵件至：duke#dukelec.com (# 替換爲 @)</p>
